{
  "name": "colendi-api",
  "version": "0.3.0",
  "description": "Colendi api",
  "author": "tech@colendi.com",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "NODE_ENV=development nest start colendi-service",
    "start:debug": "NODE_ENV=development nest start --debug --watch",
    "start:dev": "NODE_ENV=development node dist/main colendi-service",
    "start:stage": "NODE_ENV=stage node dist/main colendi-service",
    "start:prod": "NODE_ENV=production node dist/main colendi-service",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "pretest": "NODE_ENV=test npm run migration:run",
    "test": "NODE_ENV=test jest --coverage --runInBand --detectOpenHandles --forceExit",
    "test:watch": "jest --watch",
    "test:debug": "NODE_ENV=test node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "NODE_ENV=test jest --config ./jest-e2e.json --coverage --runInBand --detectOpenHandles --forceExit",
    "typeorm": "TS_NODE_PROJECT=tsconfig.ts-node.json TS_NODE_TRANSPILE_ONLY=true ./node_modules/typeorm/cli.js --config dist/db/ormconfig.js",
    "migration:create": "npm run typeorm migration:create -- -n",
    "migration:run": "npm run typeorm migration:run",
    "migration:revert": "npm run typeorm migration:revert",
    "schema:create": "npm run typeorm schema:sync",
    "schema:drop": "npm run typeorm schema:drop"
  },
  "dependencies": {
    "@nestjs/common": "^7.6.18",
    "@nestjs/core": "^7.1.3",
    "@nestjs/microservices": "^7.6.7",
    "@nestjs/passport": "^7.0.0",
    "@nestjs/platform-express": "^7.1.3",
    "@nestjs/swagger": "^4.8.0",
    "@nestjs/terminus": "^7.0.1",
    "@nestjs/typeorm": "^7.1.0",
    "@sendgrid/mail": "^7.4.4",
    "@types/aws-sdk": "^2.7.0",
    "@types/uuid": "^8.3.0",
    "aws-sdk": "^2.912.0",
    "axios": "^0.21.1",
    "bcryptjs": "^2.4.3",
    "bluebird": "^3.7.2",
    "body-parser": "^1.19.0",
    "class-transformer": "^0.2.3",
    "class-validator": "^0.12.2",
    "cron": "^1.8.2",
    "dotenv": "^8.2.0",
    "express-rate-limit": "^5.1.3",
    "helmet": "^3.23.3",
    "jsonwebtoken": "^8.5.1",
    "libphonenumber-js": "^1.8.5",
    "lodash": "^4.17.21",
    "moment": "^2.26.0",
    "mysql2": "^2.2.5",
    "nestjs-i18n": "^8.0.10",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "python-shell": "^3.0.0",
    "redis": "^3.1.2",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^6.5.4",
    "soap": "^0.35.0",
    "swagger-ui-express": "^4.1.4",
    "typeorm": "^0.2.28",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^7.0.0",
    "@nestjs/schematics": "^7.0.0",
    "@nestjs/testing": "^7.1.3",
    "@types/amqp-connection-manager": "^2.0.10",
    "@types/bcryptjs": "^2.4.2",
    "@types/bluebird": "^3.5.33",
    "@types/cron": "^1.7.2",
    "@types/express": "^4.17.3",
    "@types/express-rate-limit": "^5.0.0",
    "@types/faker": "^4.1.12",
    "@types/helmet": "0.0.47",
    "@types/jest": "25.2.3",
    "@types/lodash": "^4.14.157",
    "@types/multer": "^1.4.5",
    "@types/node": "^14.0.13",
    "@types/passport-jwt": "^3.0.3",
    "@types/redis": "^2.8.28",
    "@types/stripe": "^8.0.417",
    "@types/supertest": "^2.0.8",
    "@typescript-eslint/eslint-plugin": "3.0.2",
    "@typescript-eslint/parser": "3.0.2",
    "eslint": "7.1.0",
    "eslint-config-prettier": "^6.10.0",
    "eslint-plugin-import": "^2.21.2",
    "faker": "^4.1.0",
    "husky": "^4.2.5",
    "jest": "26.0.1",
    "lint-staged": "^10.2.11",
    "node-mocks-http": "^1.8.1",
    "prettier": "^1.19.1",
    "randexp": "^0.5.3",
    "stripe": "^8.149.0",
    "supertest": "^4.0.2",
    "ts-jest": "26.1.0",
    "ts-loader": "^7.0.5",
    "ts-node": "^8.6.2",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^3.9.5"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test && npm run test:e2e"
    }
  },
  "lint-staged": {
    "**/*.{ts}": [
      "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
      "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
      "git add"
    ]
  }
}
